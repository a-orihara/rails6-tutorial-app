<% provide(:title, 'All users') %>
<h1>All users</h1>

<%= will_paginate %>

<ul class="users">
    <%# 2 %>
    <%= render @users %>
</ul>

<%= will_paginate %>

<%# 1
will_paginate メソッドは少々不思議なことに、users ビューのコードの中か ら@users オブジェクトを自動的に見つ
け出し、それから他のページにアクセスするため のページネーションリンクを作成しています。ただし、リスト 10.45 の
ビューはこのまま では動きません。というのも、現在の@users 変数には User.all の結果が含まれていま すが(リスト
10.36)、will_paginate では paginate メソッドを使った結果が必要だ からです。
%>

<%# 2 
render をパーシャル(ファイル名の文字列)に対してではなく、User クラスの user 変数に対して実行している点に注目
してください*15。この場合、Rails は自動 的に_user.html.erb という名前のパーシャルを探しにいくので、このパーシ
ャルを作 成する必要があります(リスト 10.51)。
今度は render を@users 変数に対して直接実行します.
Rails は@users を User オブジェクトのリストであると推測します。さらに、ユーザー のコレクションを与えて呼び出す
と、Rails は自動的にユーザーのコレクションを列挙 し、それぞれのユーザーを_user.html.erb パーシャルで出力します。
これにより、リ スト 10.52 のコードは極めてコンパクトになります。
*railsはデフォでrenderの引数にモデルのインスタンス変数のコレクションを渡すと、一個一個取り出す。
%>