<%# 1 %>
<%= form_with(model: @micropost, local: true) do |f| %>
  <%# 2 %>
  <%= render 'shared/error_messages', object: f.object %>
  <div class="field">
    <%# :contentでparamsのcontentと紐付け%>
    <%= f.text_area :content, placeholder: "Compose new micropost..." %>
  </div>
  <%= f.submit "Post", class: "btn btn-primary" %>
  <span class="image">
    <%# Home ページに画像アップロードを追加するためには、マイクロポス トのフォームに file_field タグを
    含める必要があります(リスト 13.60)。%>
    <%# 4 事前にファイル形式を指定 %>
    <%= f.file_field :image, accept: "image/jpeg,image/gif,image/png" %>
  </span>
<% end %>

<%# 3 %>
<script type="text/javascript">
  $("#micropost_image").bind("change", function() {
    var size_in_megabytes = this.files[0].size/1024/1024;
    if (size_in_megabytes > 5) {
      alert("Maximum file size is 5MB. Please choose a smaller file.");
      $("#micropost_image").val("");
    }
  });
</script>

<%# 1
[model: @micropost]を渡しているので、空のmicropostオブジェクトが送られて来た場合、form_withメソッドは、
createアクション(デフォでPOSTリクエストを送る)だと自動で判断する。

@micropostはからだけど、user_idだけ入っている
%>

<%# 2
formにはformオブジェクトがある。
formメソッドは、renderの先に変数を渡せる。この場合、objectという変数にmicropostオブジェクトを入れている
パーシャルの先でmicropostオブジェクトを呼び出せるようになる
[object: f.object]は、@userならuserオブジェクトを、＠micropostならmicropostオブジェクトを参照する
%>

<%# 3 
リスト 13.66 のバリデーションを強化するため、クライアント側(つまりブラウザ)に も画像アップロードのサイズ
やフォーマットをチェックする仕組みを追加します。手始め に、JavaScript(具体的には jQuery)をちょっぴり加
えて、ユーザーがアップロードしよ うとする画像が巨大過ぎるときにアラートを表示してみましょう(こうしておけば
ユーザーがアップロードで無駄な時間を使わずに済みますし、サーバーの負荷も軽くなります)。追加した結果をリスト
13.67 に示します。
リス ト 13.67 のコードでは(ハッシュマーク#から分かるように)CSS id の micropost_image を含んだ要素を
見つけ出し、この要素を監視しています。そしてこの id を持った要素と は、リスト 13.60 にあるマイクロポスト
のフォームを指します(なお、ブラウザ上で画 面を右クリックし、インスペクターで要素を調べることで確認できます)。
つまり、こ の CSS id を持つ要素が変化したとき、この jQuery の関数が動き出します。そして、も しファイル
サイズが大きすぎた場合、図 13.27 のように alert メソッドで警告を出すと いった仕組みです。
%>

<%#4
accept パラメータを file_field 入力タグで用いれば、有効なフォーマッ トでないとアップロードできないこ
とをユーザーに伝えられるようになります
最初に有効な画像フォーマットだけを選択可能にしておき、それ以外の ファイルタイプを灰色で表示します
無効な画像がアップロードされないようブラウザ側で阻止する方法はなかなかイケてい ます。しかしここでは、この
コードは無効なファイルは巨大なファイルをアップロードし にくくするだけの効果しかないことを理解しておくこと
が重要です。ユーザーはその気に なればいつでも curl などで POST リクエストを直接発行して、無効なファイル
をアップ ロードできてしまいます。したがって、リスト 13.66 のようなサーバー側のバリデーションは省略できな
い重要なものです。
%>